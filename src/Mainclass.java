
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Umit Kilic
 */
public class Mainclass extends javax.swing.JFrame {

    Connection c=null;
    ConnecttoDB connecttodb=new ConnecttoDB();
    Statement st=null;
    private final DefaultTableModel tableModel = new DefaultTableModel();
    int selectedid=0;
    Vector<Vector<Object>> data = new Vector<Vector<Object>>();
    DefaultListModel dlm=new DefaultListModel();
    List<Student> dataforlistj=new ArrayList<Student>();
    /**
     * Creates new form Mainclass
     */
    public Mainclass() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myrbgroup = new javax.swing.ButtonGroup();
        connectbutton = new javax.swing.JButton();
        statuslabel = new javax.swing.JLabel();
        closebutton = new javax.swing.JButton();
        getall = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        namelist = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        nametable = new javax.swing.JTable();
        getalltotablebutton = new javax.swing.JButton();
        name_tf = new javax.swing.JTextField();
        age_tf = new javax.swing.JTextField();
        savebutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        chkboxa = new javax.swing.JCheckBox();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        combobox1 = new javax.swing.JComboBox<>();
        ustmenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        chkbox = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        connectbutton.setText("Connect");
        connectbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectbuttonMouseClicked(evt);
            }
        });

        statuslabel.setText("Disconnected!");

        closebutton.setText("Close");
        closebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttonActionPerformed(evt);
            }
        });

        getall.setText("Get All to Jlist");
        getall.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getallMouseClicked(evt);
            }
        });

        namelist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                namelistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(namelist);

        nametable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        nametable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nametableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(nametable);

        getalltotablebutton.setText("Get All to Table");
        getalltotablebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getalltotablebuttonMouseClicked(evt);
            }
        });

        savebutton.setText("Save");
        savebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savebuttonMouseClicked(evt);
            }
        });

        updatebutton.setText("Update");
        updatebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updatebutton.setFocusPainted(false);
        updatebutton.setFocusable(false);
        updatebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebuttonMouseClicked(evt);
            }
        });

        deletebutton.setText("Delete");
        deletebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebuttonMouseClicked(evt);
            }
        });

        chkboxa.setText("A");

        jRadioButton1.setText("RadioButton 1");

        jRadioButton2.setText("RadioButton 2");

        jRadioButton3.setText("RadioButton 3");

        myrbgroup.add(jRadioButton4);
        jRadioButton4.setText("RadioButton 4");

        myrbgroup.add(jRadioButton6);
        jRadioButton6.setText("RadioButton 5");

        myrbgroup.add(jRadioButton7);
        jRadioButton7.setText("RadioButton 6");

        jLabel1.setText("Group");

        jCheckBox1.setText("B");

        combobox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jMenu1.setText("File");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });

        jMenu3.setText("Menu 1");

        jMenuItem2.setText("jMenuItem2");
        jMenu3.add(jMenuItem2);

        jMenu1.add(jMenu3);

        jMenuItem1.setText("File 1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        chkbox.setSelected(true);
        chkbox.setText("checkbox");
        jMenu1.add(chkbox);

        ustmenu.add(jMenu1);

        jMenu2.setText("Edit");
        ustmenu.add(jMenu2);

        setJMenuBar(ustmenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(statuslabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getall)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connectbutton)
                                .addGap(18, 18, 18)
                                .addComponent(closebutton))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(age_tf, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(name_tf, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(getalltotablebutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(savebutton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkboxa)
                            .addComponent(jCheckBox1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton6)
                            .addComponent(jRadioButton7)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(combobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updatebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletebutton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(connectbutton)
                            .addComponent(closebutton))
                        .addGap(18, 18, 18)
                        .addComponent(statuslabel)
                        .addGap(28, 28, 28)
                        .addComponent(getall)
                        .addGap(54, 54, 54)
                        .addComponent(getalltotablebutton)
                        .addGap(77, 77, 77)
                        .addComponent(name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(age_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(chkboxa)
                                .addComponent(jRadioButton1)
                                .addComponent(jRadioButton4)
                                .addComponent(updatebutton)
                                .addComponent(deletebutton)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(savebutton))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton7)
                                    .addComponent(jRadioButton2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jRadioButton3)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(combobox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectbuttonMouseClicked
        // TODO add your handling code here:
        
        c=connecttodb.connectdb();
        statuslabelchange(c);
    }//GEN-LAST:event_connectbuttonMouseClicked

    private void closebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttonActionPerformed
        // TODO add your handling code here:
        c=connecttodb.disconnectdb(c);
        statuslabelchange(c);
        System.out.println(c);
    }//GEN-LAST:event_closebuttonActionPerformed

    private void getallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getallMouseClicked
        // TODO add your handling code here:
        
        dlm.removeAllElements();
        try {
            st=c.createStatement();
            ResultSet rs=st.executeQuery("select * from bilgiler");
            int i=0;
            while(rs.next()){
                Student s=new Student();
         //Retrieve by column name
         int id  = rs.getInt("ID");
         int age = rs.getInt("age");
         String name = rs.getString("name");
         s.setId(id);
         s.setAge(age);
         s.setName(name);
         
         dlm.addElement(name);
         dataforlistj.add(s);
      }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        namelist.setModel(dlm);
        
    }//GEN-LAST:event_getallMouseClicked

    private void getalltotablebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getalltotablebuttonMouseClicked
        // TODO add your handling code here:
        getalltotable();
    }//GEN-LAST:event_getalltotablebuttonMouseClicked

    private void savebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savebuttonMouseClicked
        // TODO add your handling code here:
        String name;
        int age;
        
        name=name_tf.getText();
        age=Integer.parseInt(age_tf.getText());
        try {
            st=c.createStatement();
            
            String query="insert into bilgiler (name,age) values (?, ?)";
            PreparedStatement preparedStmt = c.prepareStatement(query);
            preparedStmt.setString (1, name);
            preparedStmt.setInt (2, age);
            

            // execute the preparedstatement
            preparedStmt.execute();
        } catch (Exception e) {
            e.printStackTrace();
        }
        getalltotable();
        name_tf.setText("");
        age_tf.setText("");
    }//GEN-LAST:event_savebuttonMouseClicked

    private void nametableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nametableMouseClicked
        // TODO add your handling code here:
        
        selectedid=Integer.parseInt(data.get(nametable.getSelectedRow()).get(0).toString());
        System.out.println(selectedid);
    }//GEN-LAST:event_nametableMouseClicked

    private void updatebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebuttonMouseClicked
        // TODO add your handling code here:
        if(selectedid!=0){
            UpdateScreen upd=new UpdateScreen(c,selectedid);
            upd.setVisible(true);
        }
        
        
        System.out.println("update");
    }//GEN-LAST:event_updatebuttonMouseClicked

    // ekran acildiginda
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        System.out.println("dele");
        List<String> ls=new ArrayList<>();
        ls.add("abc");
        ls.add("dfe");
       combobox1.setModel(new DefaultComboBoxModel(ls.toArray()));
    }//GEN-LAST:event_formWindowOpened

    //ekran kapandiginda
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        System.out.println("no");
        System.out.println(chkbox.isSelected());
    }//GEN-LAST:event_formWindowClosing

    // ekrana dönüldüğünde
    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        System.out.println("gaineeed");
        if(c!=null){
            getalltotable();
        }
        
    }//GEN-LAST:event_formWindowGainedFocus

    private void deletebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebuttonMouseClicked
        // TODO add your handling code here:
        
        if(c!=null && selectedid!=0){
            try {
                System.out.println("burada!");
                st=c.createStatement();
                String query="DELETE FROM bilgiler WHERE ID="+selectedid;
                
                int res=JOptionPane.showConfirmDialog(this, "Are you sure?", "Delete", JOptionPane.OK_CANCEL_OPTION);
                if(res==JOptionPane.OK_OPTION)
                    st.executeUpdate(query);
                else if (res==JOptionPane.CANCEL_OPTION)
                    System.out.println("cancel");
                
                
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
                
        
        
    }//GEN-LAST:event_deletebuttonMouseClicked

    private void namelistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_namelistMouseClicked
        // TODO add your handling code here:
        int in=namelist.getSelectedIndex();
        int s_id=dataforlistj.get(in).getId();
        System.out.println(s_id);
    }//GEN-LAST:event_namelistMouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        System.out.println("file basildi");
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.out.println("bur");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void statuslabelchange(Connection c){
        if(c!=null)
            statuslabel.setText("Connected!");
        else
            statuslabel.setText("Disconnected!");
    }
    
    public void getalltotable(){
        try {
            st=c.createStatement();
            ResultSet rs=st.executeQuery("select * from bilgiler");
            ResultSetMetaData rsmd=rs.getMetaData();
            
         
         // Names of columns
                Vector<String> columnNames = new Vector<String>();
            int columnCount = rsmd.getColumnCount();
            for (int i = 1; i <= columnCount; i++) {
                columnNames.add(rsmd.getColumnName(i));
            }

            // Data of the table
            //Vector<Vector<Object>> data = new Vector<Vector<Object>>();
            data.removeAllElements();
            while (rs.next()) {
                Vector<Object> vector = new Vector<Object>();
                for (int i = 1; i <= columnCount; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }

            tableModel.setDataVector(data, columnNames);
            nametable.removeAll();
            nametable.setModel(tableModel);
      
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainclass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainclass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainclass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainclass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainclass().setVisible(true);
            }
        });
    }

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age_tf;
    private javax.swing.JCheckBoxMenuItem chkbox;
    private javax.swing.JCheckBox chkboxa;
    private javax.swing.JButton closebutton;
    private javax.swing.JComboBox<String> combobox1;
    private javax.swing.JButton connectbutton;
    private javax.swing.JButton deletebutton;
    private javax.swing.JButton getall;
    private javax.swing.JButton getalltotablebutton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup myrbgroup;
    private javax.swing.JTextField name_tf;
    private javax.swing.JList<String> namelist;
    private javax.swing.JTable nametable;
    private javax.swing.JButton savebutton;
    private javax.swing.JLabel statuslabel;
    private javax.swing.JButton updatebutton;
    private javax.swing.JMenuBar ustmenu;
    // End of variables declaration//GEN-END:variables
}
